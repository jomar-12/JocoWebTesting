@model IEnumerable<JocoWebTesting.Models.Estudiante>

<div>
    <p class="display-4">Estudiantes</p>
</div>

<p>
    @Html.ActionLink("Crear nuevo estudiante", "Create", null, new { @class = "btn btn-sm btn-primary" })
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Nombre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Profesion.Nombre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gpa)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Profesion.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gpa)
            </td>
            <td>
                @Html.ActionLink("Editar", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-warning"}) 
                @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-sm btn-secondary" })
                @Html.ActionLink("Borrar", "Delete", new { id = item.Id }, new { @class = "btn btn-sm btn-danger" })
            </td>
        </tr>
    }

</table>

@section scripts{

    <script>

        $('#btnSubmit').click(function (e) {

            const inputMinGpa = $('input[name="minGpa"]').val();
            const inputMaxGpa = $('input[name="maxGpa"]').val();

            if (inputMinGpa == "" || inputMaxGpa == "") {
                e.preventDefault();
                alert('Debe llenar ambos encasillados ;)');
            }
        });

    </script>

}